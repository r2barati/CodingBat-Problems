# --------------------------------- 1
# Front3

def front3(str):
  if len(str) <= 3:
    return str * 3
  if len(str) > 3:
    return (str[0] + str [1] + str [2]) * 3

# ------------------------------- 2
# Front_Back
  
def front_back(str):
  if len(str) <= 1:
    return str
  mid = str[1:len(str)-1]  # can be written as str[1:-1]
  return str[len(str)-1] + mid + str[0]

# ------------------------------- 3
# missing_char 

def missing_char(str, n):
  front = str[:n]   # up to but not including n
  back = str[n+1:]  # n+1 through end of string
  return front + back

# -------------------------------- 4
# Not_String

def not_string(str):
  if len(str) >= 3 and str[:3] == "not":
    return str
  return "not " + str

# -------------------------------- 5
# pos_neg

def pos_neg(a, b, negative):
  if negative:
    return (a < 0 and b < 0)
  else:
    return ((a < 0 and b > 0) or (a > 0 and b < 0))

# -------------------------------- 6
# near_hundred

def near_hundred(n):
  return ((abs(100 - n) <= 10) or (abs(200 - n) <= 10))
  
# -------------------------------- 7
# Makes10

def makes10(a, b):
  return (a == 10 or b == 10 or a+b == 10)

# -------------------------------- 8 
# parrot_trouble

def parrot_trouble(talking, hour):
  return (talking and (hour < 7 or hour > 20))
  
# -------------------------------- 9
# diff21

def diff21(n):
  if n <= 21:
    return 21 - n
  else:
    return (n - 21) * 2

# ------------------------------- 10
# sum_double

def sum_double(a, b):
  if a == b:
    return a * 4
  else: 
    return a + b
    
 # ------------------------------- 11
# Monkey_Trouble

def monkey_trouble(a_smile, b_smile):
    return ((a_smile and b_smile) or (not a_smile and not b_smile))

# -------------------------------- 12
# sleep_in 

def sleep_in(weekday, vacation):
  if vacation:
    return True
  elif not weekday :
    return True
  else:
    return False
   
