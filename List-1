# ---------------------------------- 1
# has23

def has23(nums):
  return nums[0] == 2 or nums[1] == 3 or nums[1] == 2 or nums[0] == 3
`
# ---------------------------------- 2
# Make_ends

def make_ends(nums):
  return [nums[i] for i in (0, -1)]
  
# ---------------------------------- 3
# middle_way

def middle_way(a, b):
  return [a[1], b[1]]

# ---------------------------------- 4
# Sum2

def sum2(nums):
  if len(nums) >= 2:
    return nums[0] + nums[1]
  elif len(nums) == 1:
    return nums[0] 
  else:
    return 0

# ---------------------------------- 5
# Max_end3

def max_end3(nums):
  return [max(nums[0], nums[2]), max(nums[0], nums[2]), max(nums[0], nums[2])]

# ---------------------------------- 6
# reverse3

def reverse3(nums):
  return list(reversed(nums))

# ---------------------------------- 7
# Rotate_left3

def rotate_left3(nums):
  return [nums[1], nums[2], nums[0]]
  
# ---------------------------------- 8
# sum3

def sum3(nums):
  return sum(nums)
  
# ---------------------------------- 9
# common_end

def common_end(a, b):
  return a[0] == b[0] or a[len(a)-1] == b[len(b)-1]
  
# ---------------------------------- 10
# make_pi

def make_pi():
  return [3,1,4]

# ----------------------------------- 11
# same_first_last

def same_first_last(nums):
  if len(nums) >= 1:
    return nums[0] == nums[len(nums)-1]
  else:
    return False
 
 # ---------------------------------- 12
# first_last6

def first_last6(nums):
  return nums[0] == 6 or nums[len(nums)-1] == 6
